name: Release
permissions:
  contents: write
  packages: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    # Standard checkout
    - uses: actions/checkout@v5
    
    # Setup Python
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    
    # Setup Node.js for TypeScript components
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    # Build Python package
    - name: Build Python package
      run: |
        python -m pip install --upgrade pip
        pip install build
        python -m build
    
    # Build TypeScript if exists
    - name: Build TypeScript
      run: |
        if [ -f "package.json" ]; then
          npm ci
          npm run build
        fi
    
    # Create GitHub Release using standard action
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*
          build/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    # Publish to PyPI (when ready)
    - name: Publish to PyPI
      if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') }}
      run: |
        pip install twine
        # Uncomment when ready to publish to PyPI
        # twine upload dist/* --skip-existing
        echo "Ready to publish to PyPI (currently disabled)"
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}