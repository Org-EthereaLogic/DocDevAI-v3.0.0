# DevDocAI v3.0.0 - Pytest Configuration
# Enforces quality gates per design specifications

[pytest]
minversion = 8.0
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=devdocai
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=20
    --tb=short
    --maxfail=1
    -v

# Custom markers for test organization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may use database)
    performance: Performance benchmarks
    security: Security-focused tests
    slow: Tests that take > 1 second
    asyncio: Asynchronous tests
    m001: Configuration Manager tests
    m002: Local Storage System tests
    m003: MIAIR Engine tests
    tdd: Test-driven development tests (write first)

# Coverage configuration
[coverage:run]
source = devdocai
branch = True
parallel = True
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */templates/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self\.debug:
    if __name__ == .__main__.:
    raise AssertionError
    raise NotImplementedError
    if TYPE_CHECKING:
    @abstractmethod
    @abc\.abstractmethod

precision = 2
show_missing = True
skip_covered = False
fail_under = 20

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml