{
  "id": "rest-api-documentation",
  "name": "REST API Documentation",
  "version": "1.0.0",
  "category": "api",
  "type": "technical",
  "description": "Comprehensive REST API documentation with endpoints, parameters, and examples",
  "author": "DevDocAI",
  "tags": ["api", "rest", "documentation", "endpoints", "technical"],
  "variables": [
    {
      "name": "API_NAME",
      "description": "Name of the API",
      "required": true,
      "type": "text"
    },
    {
      "name": "BASE_URL",
      "description": "Base URL for the API",
      "required": true,
      "type": "url",
      "default": "https://api.example.com/v1"
    },
    {
      "name": "VERSION",
      "description": "API version",
      "required": false,
      "default": "1.0.0"
    }
  ],
  "sections": [
    {
      "id": "overview",
      "title": "API Overview",
      "required": true,
      "order": 1
    },
    {
      "id": "authentication",
      "title": "Authentication",
      "required": true,
      "order": 2
    },
    {
      "id": "endpoints",
      "title": "Endpoints",
      "required": true,
      "order": 3
    },
    {
      "id": "errors",
      "title": "Error Handling",
      "required": true,
      "order": 4
    },
    {
      "id": "rate-limiting",
      "title": "Rate Limiting",
      "required": true,
      "order": 5
    }
  ],
  "template": "# {{API_NAME}} REST API Documentation\n\n**Version**: {{VERSION}}  \n**Base URL**: `{{BASE_URL}}`  \n**Protocol**: HTTPS  \n\n## Table of Contents\n\n1. [API Overview](#api-overview)\n2. [Authentication](#authentication)\n3. [Endpoints](#endpoints)\n4. [Error Handling](#error-handling)\n5. [Rate Limiting](#rate-limiting)\n6. [Data Types](#data-types)\n7. [Examples](#examples)\n\n---\n\n## API Overview\n\n### Introduction\n\nThe {{API_NAME}} REST API provides programmatic access to core functionality. This RESTful API uses standard HTTP methods and returns JSON-formatted responses.\n\n### Key Features\n\n- RESTful architecture\n- JSON request/response format\n- OAuth 2.0 authentication\n- Comprehensive error messages\n- Rate limiting for fair usage\n- CORS support\n- Webhook integration\n\n### API Conventions\n\n- **HTTP Methods**: GET, POST, PUT, PATCH, DELETE\n- **Status Codes**: Standard HTTP status codes\n- **Date Format**: ISO 8601 (YYYY-MM-DDTHH:mm:ss.sssZ)\n- **Pagination**: Offset-based pagination\n- **Filtering**: Query parameters for filtering\n- **Sorting**: `sort` parameter with field names\n\n### Request Format\n\n```http\n{METHOD} {{BASE_URL}}/{endpoint}\nHost: api.example.com\nAuthorization: Bearer {token}\nContent-Type: application/json\nAccept: application/json\n```\n\n### Response Format\n\n```json\n{\n  \"success\": true,\n  \"data\": {},\n  \"meta\": {\n    \"timestamp\": \"2024-01-01T12:00:00.000Z\",\n    \"version\": \"{{VERSION}}\"\n  }\n}\n```\n\n## Authentication\n\n### OAuth 2.0\n\nThe API uses OAuth 2.0 for authentication. Obtain an access token using your client credentials.\n\n#### Get Access Token\n\n**Endpoint**: `POST /auth/token`\n\n**Request Body**:\n```json\n{\n  \"grant_type\": \"client_credentials\",\n  \"client_id\": \"your_client_id\",\n  \"client_secret\": \"your_client_secret\",\n  \"scope\": \"read write\"\n}\n```\n\n**Response**:\n```json\n{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"token_type\": \"Bearer\",\n  \"expires_in\": 3600,\n  \"scope\": \"read write\"\n}\n```\n\n### API Key Authentication (Alternative)\n\nFor simpler integrations, API key authentication is available.\n\n**Header**: `X-API-Key: your_api_key`\n\n### Security Best Practices\n\n- Never expose credentials in client-side code\n- Use HTTPS for all API requests\n- Rotate API keys regularly\n- Implement IP whitelisting when possible\n- Monitor API usage for anomalies\n\n## Endpoints\n\n### Resources\n\n#### List Resources\n\nRetrieve a paginated list of resources.\n\n**Endpoint**: `GET /resources`\n\n**Parameters**:\n\n| Parameter | Type | Required | Description |\n|-----------|------|----------|-------------|\n| page | integer | No | Page number (default: 1) |\n| limit | integer | No | Items per page (default: 20, max: 100) |\n| sort | string | No | Sort field and order (e.g., \"name:asc\") |\n| filter | string | No | Filter expression |\n| fields | string | No | Comma-separated list of fields to return |\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": \"res_123\",\n      \"name\": \"Resource Name\",\n      \"type\": \"standard\",\n      \"created_at\": \"2024-01-01T12:00:00.000Z\",\n      \"updated_at\": \"2024-01-01T12:00:00.000Z\"\n    }\n  ],\n  \"meta\": {\n    \"page\": 1,\n    \"limit\": 20,\n    \"total\": 150,\n    \"pages\": 8\n  }\n}\n```\n\n#### Get Resource\n\nRetrieve a single resource by ID.\n\n**Endpoint**: `GET /resources/{id}`\n\n**Path Parameters**:\n- `id` (string, required): Resource identifier\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"res_123\",\n    \"name\": \"Resource Name\",\n    \"description\": \"Detailed description\",\n    \"type\": \"standard\",\n    \"status\": \"active\",\n    \"metadata\": {\n      \"key1\": \"value1\",\n      \"key2\": \"value2\"\n    },\n    \"created_at\": \"2024-01-01T12:00:00.000Z\",\n    \"updated_at\": \"2024-01-01T12:00:00.000Z\"\n  }\n}\n```\n\n#### Create Resource\n\nCreate a new resource.\n\n**Endpoint**: `POST /resources`\n\n**Request Body**:\n```json\n{\n  \"name\": \"New Resource\",\n  \"description\": \"Resource description\",\n  \"type\": \"standard\",\n  \"metadata\": {\n    \"key1\": \"value1\"\n  }\n}\n```\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"res_124\",\n    \"name\": \"New Resource\",\n    \"description\": \"Resource description\",\n    \"type\": \"standard\",\n    \"status\": \"active\",\n    \"created_at\": \"2024-01-01T12:00:00.000Z\"\n  }\n}\n```\n\n**Status Code**: `201 Created`\n\n#### Update Resource\n\nUpdate an existing resource.\n\n**Endpoint**: `PUT /resources/{id}`\n\n**Path Parameters**:\n- `id` (string, required): Resource identifier\n\n**Request Body**:\n```json\n{\n  \"name\": \"Updated Resource Name\",\n  \"description\": \"Updated description\",\n  \"status\": \"inactive\"\n}\n```\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"res_123\",\n    \"name\": \"Updated Resource Name\",\n    \"description\": \"Updated description\",\n    \"status\": \"inactive\",\n    \"updated_at\": \"2024-01-01T13:00:00.000Z\"\n  }\n}\n```\n\n#### Partial Update Resource\n\nPartially update a resource.\n\n**Endpoint**: `PATCH /resources/{id}`\n\n**Path Parameters**:\n- `id` (string, required): Resource identifier\n\n**Request Body**:\n```json\n{\n  \"status\": \"archived\"\n}\n```\n\n**Response**: Same as Update Resource\n\n#### Delete Resource\n\nDelete a resource.\n\n**Endpoint**: `DELETE /resources/{id}`\n\n**Path Parameters**:\n- `id` (string, required): Resource identifier\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"message\": \"Resource deleted successfully\"\n}\n```\n\n**Status Code**: `204 No Content`\n\n### Search\n\n#### Search Resources\n\nPerform advanced search across resources.\n\n**Endpoint**: `POST /search`\n\n**Request Body**:\n```json\n{\n  \"query\": \"search terms\",\n  \"filters\": {\n    \"type\": [\"standard\", \"premium\"],\n    \"status\": \"active\",\n    \"created_after\": \"2024-01-01\"\n  },\n  \"sort\": [\n    {\"field\": \"relevance\", \"order\": \"desc\"},\n    {\"field\": \"created_at\", \"order\": \"desc\"}\n  ],\n  \"page\": 1,\n  \"limit\": 20\n}\n```\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"results\": [],\n    \"facets\": {\n      \"type\": [\n        {\"value\": \"standard\", \"count\": 45},\n        {\"value\": \"premium\", \"count\": 15}\n      ]\n    },\n    \"total\": 60\n  }\n}\n```\n\n### Bulk Operations\n\n#### Bulk Create\n\nCreate multiple resources in a single request.\n\n**Endpoint**: `POST /resources/bulk`\n\n**Request Body**:\n```json\n{\n  \"resources\": [\n    {\"name\": \"Resource 1\", \"type\": \"standard\"},\n    {\"name\": \"Resource 2\", \"type\": \"premium\"}\n  ]\n}\n```\n\n**Response**:\n```json\n{\n  \"success\": true,\n  \"data\": {\n    \"created\": 2,\n    \"failed\": 0,\n    \"resources\": []\n  }\n}\n```\n\n## Error Handling\n\n### Error Response Format\n\n```json\n{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"RESOURCE_NOT_FOUND\",\n    \"message\": \"The requested resource was not found\",\n    \"details\": {\n      \"resource_id\": \"res_123\"\n    },\n    \"request_id\": \"req_abc123\",\n    \"timestamp\": \"2024-01-01T12:00:00.000Z\"\n  }\n}\n```\n\n### Common Error Codes\n\n| HTTP Status | Error Code | Description |\n|-------------|------------|-------------|\n| 400 | BAD_REQUEST | Invalid request parameters |\n| 401 | UNAUTHORIZED | Missing or invalid authentication |\n| 403 | FORBIDDEN | Insufficient permissions |\n| 404 | NOT_FOUND | Resource not found |\n| 409 | CONFLICT | Resource conflict |\n| 422 | VALIDATION_ERROR | Request validation failed |\n| 429 | RATE_LIMITED | Too many requests |\n| 500 | INTERNAL_ERROR | Internal server error |\n| 503 | SERVICE_UNAVAILABLE | Service temporarily unavailable |\n\n### Validation Errors\n\n```json\n{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Request validation failed\",\n    \"details\": {\n      \"fields\": [\n        {\n          \"field\": \"email\",\n          \"message\": \"Invalid email format\"\n        },\n        {\n          \"field\": \"age\",\n          \"message\": \"Must be greater than 0\"\n        }\n      ]\n    }\n  }\n}\n```\n\n## Rate Limiting\n\n### Rate Limit Headers\n\nAll API responses include rate limit information:\n\n```http\nX-RateLimit-Limit: 1000\nX-RateLimit-Remaining: 999\nX-RateLimit-Reset: 1640995200\nX-RateLimit-Reset-After: 3600\n```\n\n### Rate Limits by Plan\n\n| Plan | Requests/Hour | Burst Rate | Concurrent Requests |\n|------|---------------|------------|---------------------|\n| Free | 100 | 10/min | 2 |\n| Basic | 1,000 | 50/min | 5 |\n| Pro | 10,000 | 200/min | 10 |\n| Enterprise | Unlimited | Custom | Custom |\n\n### Rate Limit Exceeded Response\n\n```json\n{\n  \"success\": false,\n  \"error\": {\n    \"code\": \"RATE_LIMITED\",\n    \"message\": \"Rate limit exceeded. Please retry after 3600 seconds.\",\n    \"details\": {\n      \"limit\": 1000,\n      \"remaining\": 0,\n      \"reset_at\": \"2024-01-01T13:00:00.000Z\"\n    }\n  }\n}\n```\n\n## Data Types\n\n### Common Fields\n\n| Field | Type | Description |\n|-------|------|-------------|\n| id | string | Unique identifier |\n| created_at | datetime | Creation timestamp (ISO 8601) |\n| updated_at | datetime | Last update timestamp (ISO 8601) |\n| deleted_at | datetime | Soft deletion timestamp |\n\n### Enumerations\n\n#### Resource Type\n- `standard`\n- `premium`\n- `enterprise`\n\n#### Status\n- `active`\n- `inactive`\n- `pending`\n- `archived`\n\n### Pagination\n\n```typescript\ninterface Pagination {\n  page: number;\n  limit: number;\n  total: number;\n  pages: number;\n  has_next: boolean;\n  has_prev: boolean;\n}\n```\n\n## Examples\n\n### cURL Examples\n\n#### Authentication\n```bash\ncurl -X POST {{BASE_URL}}/auth/token \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"grant_type\": \"client_credentials\",\n    \"client_id\": \"your_client_id\",\n    \"client_secret\": \"your_client_secret\"\n  }'\n```\n\n#### Get Resource\n```bash\ncurl -X GET {{BASE_URL}}/resources/res_123 \\\n  -H \"Authorization: Bearer your_access_token\" \\\n  -H \"Accept: application/json\"\n```\n\n#### Create Resource\n```bash\ncurl -X POST {{BASE_URL}}/resources \\\n  -H \"Authorization: Bearer your_access_token\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"New Resource\",\n    \"type\": \"standard\"\n  }'\n```\n\n### SDK Examples\n\n#### JavaScript/Node.js\n```javascript\nconst api = require('@example/api-sdk');\n\nconst client = new api.Client({\n  apiKey: 'your_api_key',\n  baseUrl: '{{BASE_URL}}'\n});\n\n// List resources\nconst resources = await client.resources.list({\n  page: 1,\n  limit: 20\n});\n\n// Create resource\nconst newResource = await client.resources.create({\n  name: 'New Resource',\n  type: 'standard'\n});\n```\n\n#### Python\n```python\nimport example_api\n\nclient = example_api.Client(\n    api_key='your_api_key',\n    base_url='{{BASE_URL}}'\n)\n\n# List resources\nresources = client.resources.list(page=1, limit=20)\n\n# Create resource\nnew_resource = client.resources.create(\n    name='New Resource',\n    type='standard'\n)\n```\n\n### Webhook Integration\n\n#### Webhook Payload\n```json\n{\n  \"event\": \"resource.created\",\n  \"timestamp\": \"2024-01-01T12:00:00.000Z\",\n  \"data\": {\n    \"id\": \"res_124\",\n    \"name\": \"New Resource\",\n    \"type\": \"standard\"\n  },\n  \"signature\": \"sha256=...\"\n}\n```\n\n#### Webhook Verification\n```javascript\nconst crypto = require('crypto');\n\nfunction verifyWebhook(payload, signature, secret) {\n  const hash = crypto\n    .createHmac('sha256', secret)\n    .update(payload)\n    .digest('hex');\n  \n  return `sha256=${hash}` === signature;\n}\n```\n\n## API Changelog\n\n### Version 1.0.0 (Current)\n- Initial API release\n- Basic CRUD operations\n- OAuth 2.0 authentication\n- Rate limiting\n- Webhook support\n\n### Upcoming Features\n- GraphQL endpoint\n- WebSocket support\n- Batch operations\n- Advanced filtering\n\n## Support\n\n### Contact Information\n- **Email**: api-support@example.com\n- **Documentation**: https://docs.example.com/api\n- **Status Page**: https://status.example.com\n- **Community Forum**: https://forum.example.com\n\n### SLA\n- **Uptime**: 99.9% for Pro and Enterprise plans\n- **Support Response Time**:\n  - Free: 72 hours\n  - Basic: 24 hours\n  - Pro: 4 hours\n  - Enterprise: 1 hour\n\n---\n\n*Generated by*: DevDocAI Template System  \n*Last Updated*: [Current Date]  \n*API Version*: {{VERSION}}"
}