# Kubernetes Deployment Template
# Generated by DevDocAI v3.0.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{deployment_name}}
  namespace: {{namespace|default:default}}
  labels:
    app: {{app_name}}
    version: {{version|default:v1}}
    environment: {{environment|default:production}}
    managed-by: devdocai
  annotations:
    description: "{{deployment_description}}"
spec:
  replicas: {{replicas|default:3}}
  revisionHistoryLimit: {{revision_history|default:10}}
  strategy:
    type: {{strategy_type|default:RollingUpdate}}
    rollingUpdate:
      maxSurge: {{max_surge|default:1}}
      maxUnavailable: {{max_unavailable|default:1}}
  selector:
    matchLabels:
      app: {{app_name}}
      version: {{version|default:v1}}
  template:
    metadata:
      labels:
        app: {{app_name}}
        version: {{version|default:v1}}
        environment: {{environment|default:production}}
      annotations:
        prometheus.io/scrape: "{{enable_prometheus|default:true}}"
        prometheus.io/port: "{{metrics_port|default:9090}}"
        prometheus.io/path: "{{metrics_path|default:/metrics}}"
    spec:
      serviceAccountName: {{service_account|default:default}}
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: {{user_id|default:1000}}
        fsGroup: {{group_id|default:1000}}
        
      # Init containers
      initContainers:
        - name: migration
          image: {{image_registry}}/{{image_name}}:{{image_tag|default:latest}}
          command: ["{{migration_command|default:npm run migrate}}"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{app_name}}-secrets
                  key: database-url
                  
      # Main containers
      containers:
        - name: {{container_name|default:app}}
          image: {{image_registry}}/{{image_name}}:{{image_tag|default:latest}}
          imagePullPolicy: {{pull_policy|default:IfNotPresent}}
          
          # Ports
          ports:
            - name: http
              containerPort: {{container_port|default:3000}}
              protocol: TCP
            - name: metrics
              containerPort: {{metrics_port|default:9090}}
              protocol: TCP
              
          # Environment variables
          env:
            - name: NODE_ENV
              value: "{{node_env|default:production}}"
            - name: PORT
              value: "{{container_port|default:3000}}"
            - name: LOG_LEVEL
              value: "{{log_level|default:info}}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
                  
          # Environment from ConfigMap
          envFrom:
            - configMapRef:
                name: {{app_name}}-config
            - secretRef:
                name: {{app_name}}-secrets
                
          # Resource limits
          resources:
            requests:
              memory: "{{memory_request|default:256Mi}}"
              cpu: "{{cpu_request|default:100m}}"
            limits:
              memory: "{{memory_limit|default:512Mi}}"
              cpu: "{{cpu_limit|default:500m}}"
              
          # Liveness probe
          livenessProbe:
            httpGet:
              path: {{liveness_path|default:/health}}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{liveness_initial_delay|default:30}}
            periodSeconds: {{liveness_period|default:10}}
            timeoutSeconds: {{liveness_timeout|default:5}}
            successThreshold: 1
            failureThreshold: {{liveness_failure_threshold|default:3}}
            
          # Readiness probe
          readinessProbe:
            httpGet:
              path: {{readiness_path|default:/ready}}
              port: http
              scheme: HTTP
            initialDelaySeconds: {{readiness_initial_delay|default:5}}
            periodSeconds: {{readiness_period|default:5}}
            timeoutSeconds: {{readiness_timeout|default:3}}
            successThreshold: 1
            failureThreshold: {{readiness_failure_threshold|default:3}}
            
          # Volume mounts
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: cache-volume
              mountPath: /app/cache
            - name: tmp-volume
              mountPath: /tmp
              
          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{user_id|default:1000}}
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            readOnlyRootFilesystem: {{readonly_root|default:true}}
            
      # Volumes
      volumes:
        - name: config-volume
          configMap:
            name: {{app_name}}-config
            defaultMode: 0644
        - name: cache-volume
          emptyDir:
            sizeLimit: {{cache_size|default:1Gi}}
        - name: tmp-volume
          emptyDir:
            sizeLimit: {{tmp_size|default:500Mi}}
            
      # Node affinity
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{app_name}}
                topologyKey: kubernetes.io/hostname
                
      # Tolerations
      tolerations:
        - key: "{{toleration_key|default:node-role.kubernetes.io/compute}}"
          operator: "{{toleration_operator|default:Equal}}"
          value: "{{toleration_value|default:true}}"
          effect: "{{toleration_effect|default:NoSchedule}}"
          
      # Termination grace period
      terminationGracePeriodSeconds: {{termination_grace|default:30}}
      
      # DNS policy
      dnsPolicy: {{dns_policy|default:ClusterFirst}}
      
      # Image pull secrets
      imagePullSecrets:
        - name: {{pull_secret|default:registry-credentials}}

---
# Service definition
apiVersion: v1
kind: Service
metadata:
  name: {{service_name|default:{{app_name}}-service}}
  namespace: {{namespace|default:default}}
  labels:
    app: {{app_name}}
    version: {{version|default:v1}}
  annotations:
    description: "Service for {{app_name}}"
spec:
  type: {{service_type|default:ClusterIP}}
  selector:
    app: {{app_name}}
    version: {{version|default:v1}}
  ports:
    - name: http
      port: {{service_port|default:80}}
      targetPort: http
      protocol: TCP
    - name: metrics
      port: {{metrics_port|default:9090}}
      targetPort: metrics
      protocol: TCP
  sessionAffinity: {{session_affinity|default:None}}